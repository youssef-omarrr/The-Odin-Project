.container {
    display: inline-grid;
    /* 5x5 grid */
    grid-template: 40px 40px 40px 40px 40px
        / 40px 40px 40px 40px 40px;
    background-color: lightblue;
}

.room {
    border: 1px solid;
    font-size: 50%;
    text-align: center;
}

#living-room {
    /* start and end are by the lines not the cells */
    grid-column-start: 1;
    grid-column-end: 6;

    grid-row-start: 1;
    grid-row-end: 3;
}

#bathroom {
    grid-column-start: 1;
    grid-column-end: 2;

    /* we can use span if we only know the width */
    grid-row-start: 3;
    grid-row-end: span 3;
    /* You can also use the "span" keyword with "grid-column-start"
     to set your item's width relative to the end position. */
}

#bedroom {
    grid-column-start: 2;
    grid-column-end: 4;

    grid-row-start: 3;
    grid-row-end: 5;
}

#kitchen {
    /* instead of writing start and end you can write them like this */
    grid-column: 4 / 6;
    grid-row: 3 / 6;
}

#closet {
    grid-column-start: 2;
    grid-column-end: 4;

    grid-row-start: 5;
    grid-row-end: 6;
}


/* There is an even shorter shorthand for positioning grid items with start and end lines.
You can combine "grid-row-start / grid-column-start / grid-row-end / grid-column-end"
into one line using "grid-area". */

#living-room {
    grid-area: 1 / 1 / 3 / 6;
}

/* another way to do it is to define them in the main container with
"grid-template-areas"
and use them in each room like this:
grid-area:  living-room;
 */

.container {
    display: inline-grid;
    grid-template: 40px 40px 40px 40px 40px / 40px 40px 40px 40px 40px;
    background-color: lightblue;

    /* like you are drwaing the template the way you want it */
    grid-template-areas:
        "living-room living-room living-room living-room living-room"
        "living-room living-room living-room living-room living-room"
        "bedroom     bedroom     bathroom    kitchen     kitchen    "
        "bedroom     bedroom     bathroom    kitchen     kitchen    "
        "closet      closet      bathroom    .           .          "
        /* we can indicate an empty cell with "." */
}

.room {
    border: 1px solid;
    font-size: 50%;
    text-align: center;
}

#living-room {
    grid-area: living-room;
}

#kitchen {
    grid-area: kitchen;
}

#bedroom {
    grid-area: bedroom;
}

#bathroom {
    grid-area: bathroom;
}

#closet {
    grid-area: closet;
}